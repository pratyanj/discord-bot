// database
datasource db {
  provider = "sqlite"
  // url      = "file:D:/www/wwwroot/TechTOnions_Bot/Backend V2/database/BOT.sqlite"
  url      = "file:D:/pratyanj laptop/python/discordbot/TO bot/mainBOT V2/database/BOT.sqlite"
}
// generator
generator client {
  provider             = "prisma-client-py"
  recursive_type_depth = 5
}


// Define the Server table
model Server {
  ID            Int    @id @default(autoincrement())
  server_id     BigInt @unique
  server_name   String
  prefix        String
  log_channel   BigInt
}

// Define the Status table
model Status {
  ID            Int       @id @default(autoincrement())
  server_id     BigInt    @unique
  IMAGES_ONLY   Boolean   @default(false) 
  LINKS_ONLY    Boolean   @default(false)
}
// Define the Welcome table
model Welcome {
  ID           Int      @id @default(autoincrement())
  server_id    BigInt   @unique
  status       Boolean  @default(false)
  channel_id   BigInt   @default(0)
  channel_name String   @default("")
  message      String   @default("")
}
// Define the Goodbye table
model Goodbye {
  ID           Int      @id @default(autoincrement())
  server_id    BigInt   @unique
  status       Boolean  @default(false)
  channel_id   BigInt   @default(0)
  channel_name String   @default("")
  message      String   @default("")
}
// Define the JoinRole table
model JoinRole {
  ID          Int     @id @default(autoincrement())
  status      Boolean @default(false)
  server_id   BigInt  @unique
  role_id     BigInt
  role_name   String
}
// Define the YouTubeSetting table
model YouTubeSetting {
  ID           Int    @id @default(autoincrement())
  server_id    BigInt @unique
  status       Boolean@default(false)
  channel_id   BigInt
  channel_name String
}
// Define the ReactionVerificationRole table
model ReactionVerificationRole {
  ID             Int    @id @default(autoincrement())
  server_id      BigInt @unique
  role_id        BigInt
  role_name      String
  channel_id     BigInt
  channel_name   String
  status         Boolean @default(false)
}
// Define the LevelSetting table
model LevelSetting {
  ID                   Int    @id @default(autoincrement())
  server_id            BigInt @unique
  status               Boolean@default(false)
  level_up_channel_id  BigInt
  level_up_channel_name String
}

// Define the NoXPChannel table
model NoXPChannel {
  ID           Int    @id @default(autoincrement())
  server_id    BigInt
  channel_id   BigInt
  channel_name String
}
// Define the NoXPRole table
model NoXPRole {
  ID          Int    @id @default(autoincrement())
  server_id   BigInt
  role_id     BigInt
  role_name   String
}

// Define the LevelRole table
model LevelRole {
  ID               Int    @id @default(autoincrement())
  server_id        BigInt
  level            Int
  role_id          BigInt
  role_name        String
}

// Define the UsersLevel table
model UsersLevel {
  ID         Int    @id @default(autoincrement())
  server_id  BigInt
  user_id    BigInt
  user_name  String
  level      Int    @default(0)
  xp         Int    @default(0)
}


// Define the ImagesOnly table
model ImagesOnly {
  ID           Int    @id @default(autoincrement())
  server_id    BigInt
  channel_id   BigInt
  channel_name String
}

// Define the LinksOnly table
model LinksOnly {
  ID           Int    @id @default(autoincrement())
  server_id    BigInt
  channel_id   BigInt
  channel_name String
}


// Define the YouTubeSubChannel table
model YouTubeSubChannel {
  ID         Int    @id @default(autoincrement())
  server_id  BigInt
  channel    String
}

// Define the YouTubeVideos table
model YouTubeVideos {
  ID        Int    @id @default(autoincrement())
  server_id BigInt 
  channel   String
  video_id  String
}

model membercount{
  ID                  Int     @id @default(autoincrement())
  status              Boolean @default(false)
  server_id           BigInt  @unique
  Total_Members       BigInt
  Online_Members      BigInt
  Bots                BigInt 

}
model DashboardUSER {
  ID                  Int     @id @default(autoincrement())
  user_id             BigInt  @unique
  guilds              String
  users               String
}